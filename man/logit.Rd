% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BinaryChoiceModels.R
\name{logit}
\alias{logit}
\title{Logit binary choice model}
\usage{
logit(form, data, errors = c("homoskedastic", "robust", "white", "HC0", "HC2",
  "HC3", "HC4", "HC4m", "HC5"), cluster = FALSE, quietly = FALSE,
  warnings = TRUE)
}
\arguments{
\item{form}{The regression formula. See \code{\link{lm}} for details on writing this formula.}

\item{data}{The data.frame for the regression. As subsetting is not currently supported you should drop observations you do not want to include from the data.frame.}

\item{errors}{The type of standard errors. The options are c("homoskedastic", "robust", "white", "HC0" , "HC2" , "HC3" , "HC4", "HC4m", "HC5") where the last ones are as described by \code{\link{sandwich::vcovHC}}}

\item{cluster}{The clustering variable. If input errors (above) are ignored.}

\item{quietly}{Output a summary? FALSE by default.}

\item{warnings}{Warn about biased and inconsistent parameters in presence of heteroskedasticity?}
}
\value{
An econreg object which contains a list:
 \enumerate{
 \item a linear model
 \item the covariance matrix
 \item the type of errors
 \item Class - The class of the model, logit
 }
}
\description{
Note that robust errors are allowed in this case as is allowed in Stata.
It should be noted however that in the presence of heteroskedasticity parameters of a logit model are biased and inconsistent and no standard errors corrections will fix this problem. See \code{\link{http://davegiles.blogspot.com.es/2013/05/robust-standard-errors-for-nonlinear.html}} for more discussion. If there is heteroskedasticity you can consider using the \code{gmlx} package which allows it to be modelled such that it won't bias estimates.
The above warning will be displayed by default when robust errors are used without heteroskedasticity being modelled. To disable warnings set warnings = FALSE.
The results here will never match Stata's output to all decimal places. The reason is because Stata uses a different numerical optimisation algorithm.
}
\examples{
x = sin(1:100)
y = round((x - 50)/50 + c(rnorm(50), rnorm(50, sd = 3)))
y[y>0] = 1 ; y[y<0] = 0
z = as.factor(c(rep("A", 50), rep("B", 50) ))
dd = data.frame(x = x, y = y, z = z)
form = "y ~ x"
rm(x,y,z)
M4 = logit(form = form, data = dd)
M5 = logit(form = form, data = dd, errors = "robust")
}
\seealso{
\code{\link{lm}}; \code{\link{sandwich::vcovHC}}
}

